name: Docker Build and Push

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

env:
  REGISTRY_URL: registry:5000  # Replace with your registry URL
  SUBMISSION_API: http://your-api-endpoint  # Replace with your API endpoint

jobs:
  prepare:
    runs-on: ubuntu-latest
    outputs:
      matrix: ${{ steps.set-matrix.outputs.matrix }}
    steps:
      - uses: actions/checkout@v2
      
      - name: Generate build matrix
        id: set-matrix
        run: |
          python3 -c '
          import yaml
          import json
          import uuid
          
          with open("config.yaml") as f:
              config = yaml.safe_load(f)
          
          builds = []
          for challenge in config["challenges"]:
              for submission in challenge["submissions"]:
                  container_id = str(uuid.uuid4())
                  builds.append({
                      "folder": submission,
                      "challenge_name": challenge["name"],
                      "container_id": container_id,
                      "email": config["email"]
                  })
          
          matrix = {"include": builds}
          print("::set-output name=matrix::" + json.dumps(matrix))
          '

  build-and-push:
    needs: prepare
    runs-on: ubuntu-latest
    strategy:
      matrix: ${{fromJson(needs.prepare.outputs.matrix)}}
    steps:
      - uses: actions/checkout@v2

      - name: Configure Docker for insecure registry
        run: |
          echo "{\"insecure-registries\": [\"$REGISTRY_URL\"]}" | sudo tee /etc/docker/daemon.json
          sudo service docker restart

      - name: Cache pip packages
        uses: actions/cache@v2
        with:
          path: ~/.cache/pip
          key: ${{ runner.os }}-pip-${{ hashFiles('${{ matrix.folder }}/requirements.txt') }}
          restore-keys: |
            ${{ runner.os }}-pip-

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2

      - name: Cache Docker layers
        uses: actions/cache@v2
        with:
          path: /tmp/.buildx-cache
          key: ${{ runner.os }}-buildx-${{ matrix.folder }}-${{ github.sha }}
          restore-keys: |
            ${{ runner.os }}-buildx-${{ matrix.folder }}-

      - name: Build and push
        uses: docker/build-push-action@v2
        with:
          context: ${{ matrix.folder }}
          push: true
          tags: ${{ env.REGISTRY_URL }}/${{ matrix.container_id }}:latest
          cache-from: type=local,src=/tmp/.buildx-cache
          cache-to: type=local,dest=/tmp/.buildx-cache-new,mode=max
          allow: network.host

      - name: Move cache
        run: |
          rm -rf /tmp/.buildx-cache
          mv /tmp/.buildx-cache-new /tmp/.buildx-cache

      - name: Notify submission
        run: |
          curl -X POST ${{ env.SUBMISSION_API }} \
            -H "Content-Type: application/json" \
            -d '{
              "email": "${{ matrix.email }}",
              "challenge_name": "${{ matrix.challenge_name }}",
              "submission_folder": "${{ matrix.folder }}",
              "container_id": "${{ matrix.container_id }}"
            }'
